name: Build and Deploy Employee micro to ECS

on:
  push:
    paths:
      - "microservices/employee/**"
    branches:
      - main

permissions:
  contents: write

env:
  ECR_BACKEND_IMAGE_EMPLOYEE: ${{ vars.ECR_BACKEND_IMAGE_EMPLOYEE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_BACKEND_SERVICE: ${{ vars.ECS_BACKEND_SERVICE }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bump version and push new tag
        id: bump_version
        uses: anothrNick/github-tag-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITREPO_TOKEN }}
          WITH_V: true
          DEFAULT_BUMP: patch
          RELEASE_BRANCHES: main
          VERBOSE: true
          INITIAL_VERSION: 0.0.0
          MAJOR_STRING_TOKEN: "BREAKING CHANGE:"
          MINOR_STRING_TOKEN: "feat"
          PATCH_STRING_TOKEN: "fix"
          NONE_STRING_TOKEN: "chore,docs,style,refactor,test"
          BRANCH_HISTORY: last

      - name: Show new version
        run: |
          echo "New Version Generated: ${{ steps.bump_version.outputs.new_tag }}"
          echo "Tag: ${{ steps.bump_version.outputs.tag }}"
          echo "Previous Tag: ${{ steps.bump_version.outputs.old_tag }}"
          echo "Part bumped: ${{ steps.bump_version.outputs.part }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Set up QEMU for arm64
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        if: runner.os == 'Linux'

      - name: Set up Docker for arm64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        run: |
          cd microservices/employee
          docker buildx create --use
          docker buildx inspect --bootstrap

          VERSION=${{ steps.bump_version.outputs.new_tag }}
          IMAGE=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_BACKEND_IMAGE_EMPLOYEE

          echo "Build and publis new image $IMAGE:$VERSION"
          docker buildx build --platform linux/arm64 -t $IMAGE:$VERSION -t $IMAGE:latest --push .
